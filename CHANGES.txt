##################
#v1.0.9- 09042021#
##################
-covPerGe_normalizedByChrMedianCov and covPerBin_normalizedByChrMedianCov handle chromosomes with zero median coverage (e.g. nullisomy) 
-the bigwig step does not compute the density tracks on separate chromosomes anymore. This means that aneuploidy between samples of chromosomes will be visible. The main problem before was that chromosomes of the same samples would get different counts because the million mapped reads are different (in the RPKM normalization) simply due to the different chromosome lenght. Now it is fixed and it is a much simpler step
-updated deeptols realease 3.5.1
-Renamed dNdS with the more correct "NS" since the non-synonimous and synonimous counts are absolute and not normalized. In the dNdS form the N and S values are presented as rates (i.e. normalized by all the possible N and S sites) and the ratio it is normalized to 1. It is still informative to perform a N/S ratio analysis on absolute counts (i.e. not rates) as shown in the paper PMID: 22728672. Briefly you can compute the non-normalized N/S ratio for a sample, and then check if individual genes have an N/S ratio above or below the sample value. Anyway, the dNdS analysis would not be much informative for GIP since the primary use is to compare multiple samples of the same species (same reference genome) (see PMID: 19081788). Possibly implement in the future the pNpS analysis (which may be involved since you should look just at exonic DNA).

##################
#v1.0.8- 10032021#
##################
-introduced hexagons and randomSNVtoShow in filterFreebayesOPT to reduce overplotting and deal with samples with huge amount of SNVs
-improved vcf2variantsFrequency_V4.R replacing for loops with vectorial operations when estimating SNVs context, and introduced randomSNVtoShow and hexagons options
-introduced randomSNVtoShow also in the SNV giptools module
-Fixed SNV double scale_y_countinuous issue when showing coverage and added new options for thickness and transparency
-new geInteraction. Now it runs clustering (and cluster filters) not just on the network, but also upstream on the correlation heatmap. Genes filtered from the correlation map are filtered from everywhere. The correlation map clustering is based on pearson correlation values, while the network correlation uses absolute correlation scores. They are both interesting. The script now also produces a line plot after the correlation heatmap showing the scaled coverage of the genes in the various predicted correlation clusters

##################
#v1.0.7- 05032021#
##################
-circos plot coverage is now normalized by median karytype coverage rather than chromosome median coverage

##################
#v1.0.6- 19022021#
##################
-Improved visualization of covPerGe plots
-improved covPerBin that now can accept a BED file without having to compute it each time

##################
#v1.0.5- 11122020#
##################
- removed bashFunctions.sh. All the bash functions are now independent bash scripts. This change was made to prevent the typeset -fx error when declaring variables in the singularity environment of singularity version 3.6
- exon/intron structure aware. The input annotation can now also be exons or CDS. This is important not much for the gene CNV (since the gene definition anyway include both exons and introns) but for snpEff: an intragenic but intronic SNV will have a different effect than an exonic one. Also, now gip is parsing the ANN field of snpEff, not the EFF. Eventually,a single SNV can impact multiple genes (e.g. opposite strands). In this case the function of all genes will be reported in the output table (semicolumn separated)

###################
#v1.0.4- 28102020#
###################
- CG-correction is optional
- CG-correction is faster because now the %CG percent for each interval is measured with bedtools nuc
- CG-correction for bins now is log10 scaled, is a ggplot scatterplot instead of a smooth scatter
- removed covPerNt. The karyotype is computed from covPerBin files. The median genome coverage used for boxplot normalization is now the median of the covPerBin meanCoverage values (which approximates well to the median coverage and is much faster to compute)
- the karyotype module now requires covPerBin instead of covPerNt

###################
#v1.0.3- 21102020#
###################
-changed covPerBin and covPerGe functions. Now are much faster.
-The covPerBin format. The "mean" and "median" columns have been replaced by "meanCoverage" and "normalizedMeanCoverage" to be consistent with the covPerGe format (and because computing the bin median is CPU intensive for big genomes)
-Changed all the gip parts in which covPerGe or covPerBin are called with the new command execution.
-Changed the downstream scripts using the covPerBin function or accepting covPerBin files (adapting the syntax to read them).
-removed BITFLAG option
-introduced delDup option
-chromosomes now accept the "all" option to consider all the chromosomes by default
-removed indelRealignment from GATK
-removed freebayes default options "--hwe-priors-off --binomial-obs-priors-off --allele-balance-priors-off". So we reintroduce the mappability priors. Anyway bayesian priors should be compatible with the aneuploidy or CNV situations. See https://galaxyproject.org/tutorials/var_hap/freebayes.pdf and https://groups.google.com/g/freebayes/c/KSHsQ-D_ems . If low frequency variants disappear completely (as written in some post) the user may disable again the priors re-adding these options to gip.config


###################
#v1.0.2- 23092020#
###################
-introduced Red as a default tool to mask repeat
-removed unused:
genePredToBed 
gtfToGenePred 
exonGTF_2_fasta.sh 
prepareAssembly.sh 
gtf2bed12.sh 
-the user must have the caution to specify all the input parameters not relative to the host system, but relative to where the data will be visible in the container. 
So all he/she needs to do is:
1) bind the directory ('-B  /ebi/fq/:/fq')
2) provide the input files relative to the mounted directory (--reads /fq/sample.fastq.gz )


###################
#v1.0.1 - 05092020#
###################
-Adopted miniCRAN local R packages repository 
-Renamed giptools.sif
-prepared several contrast modules:
  SNV
  binCNV
  binDensity
  geCNV
  geInteraction
  genomeDistance
  karyotype
  ternary
  ternaryBin

###################
#v1.0.1 - 22072020#
###################
Removed several unused L-GERT job arrays scripts

###################
#v1.0.1 - 20072020#
###################
Error when run on TARS Due to the fact that the R libraries were searched in the host home and not on the container

 Error: package or namespace load failed for 'VariantAnnotation' in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):
 namespace 'DBI' 1.0.0 is being loaded, but >= 1.1.0 is required

===> Workaround in the cluster
export R_LIBS=/usr/local/lib/R/library/
export R_LIBS_USER=/usr/local/lib/R/library/
then in the NF config envWhitelist='R_LIBS,R_LIBS_USER'

===> R_LIBS and R_LIBS_USER are now also exported in the definition file. I need to test if the new container works in the cluster without the need to export those variables there and defining envWhitelist

##############
#NOTE CHANGES#
##############
1) The coverage readout of nt bin and gene is now without MAPQ filters. The covPerNt, covPerBin and covPerGe files don't consider now any read MAPQ filter. Then it is the downstream analysis that decides what nt bin or gene to filter/mask. This is a nice improvement!
2) in snpEff the user can introduce the notion of ncRNAs by providing a GTF file which specifies the ncRNA biotype. Rwad snpEff documentation 
