#!/bin/bash
#############################################################################
# giptools                                                                  #
#                                                                           #
# Authors: Giovanni Bussotti                                                #
# Copyright (c) 2021  Institut Pasteur                                      #
#                                                                           #
#                                                                           #
# This program is free software: you can redistribute it and/or modify      #
# it under the terms of the GNU General Public License as                   #
# published by the Free Software Foundation, either version 3 of the        #
# License, or (at your option) any later version.                           #
#                                                                           #
# This program is distributed in the hope that it will be useful,           #
# but WITHOUT ANY WARRANTY; without even the implied warranty of            #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
# GNU General Public License for more details.                              #
#                                                                           #
# You should have received a copy of the GNU General Public License         #
# along with this program.  If not, see <https://www.gnu.org/licenses/>.    #
#                                                                           #
#############################################################################

BAM=$1
BINSIZE=$2
CHRSIZE=$3
chrCoverageMedians=$4
TMP=$5
BED=$6

mkdir -p $TMP/_sort1 $TMP/_sort2 $TMP/_sort3
OUT=${BAM/%.bam/.covPerBin}
if [ -z "$BED" ]; then
  BED=${BAM/%.bam/.bed} 
  bedtools bamtobed -split -i $BAM | sort -k1,1 -k2,2n -T $TMP/_sort1 > $BED
fi
bedtools makewindows -g $CHRSIZE -w $BINSIZE | sort -k1,1 -k2,2n -T $TMP/_sort2 > $TMP/windows
bedtools map -a $TMP/windows -b $BED -c 5 -o mean -null 0 > $TMP/meanMapq
bedtools coverage -sorted -d -a $TMP/windows -b $BED > $TMP/winCov
echo -e "chromosome\tstart\tend\tmeanCoverage" > $TMP/covPerBinNotNorm
awk '{i=$1"\t"1+$2"\t"$3; count[i]++; sum[i]+=$5;} END{ for(i in count) {m = sum[i]/count[i]; print i "\t" m}}  ' $TMP/winCov  | sort -k1,1 -k2,2n -T $TMP/_sort3 >> $TMP/covPerBinNotNorm
#normalize
covPerBin_normalizedByChrMedianCov $chrCoverageMedians $TMP/covPerBinNotNorm $TMP/covPerBin
#add mapq
perl -e '
#read mapq
open(F,"<'$TMP/meanMapq'") or die "covPerBin cannot open meanMapq";
my %h;
while(<F>){ 
  if ($_=~/^(\S+)\s+(\S+)\s+\S+\s+(\S+)/){
      $h{"${1}_$2"} = $3;
  }
} 
close F;

open(O,">'$OUT'") or die "covPerBin cannot open out";
open(F,"<'$TMP/covPerBin'") or die "covPerBin cannot open covPerBin";
$header = <F>;
chomp $header;
print O $header . "\tMAPQ\n";
while(<F>){ 
  if ($_=~/^(\S+)\t(\S+)\t(\S+\t\S+\t\S+)/){
      $chr   = $1;
      $start = $2;
      $a     = $3;
      $s     = $start -1;
      $mapq  = $h{"${chr}_$s"};
      print O "$chr\t$start\t$a\t$mapq\n";

  }
} 
close F;
close O;'
gzip $OUT
rm -rf $TMP 

