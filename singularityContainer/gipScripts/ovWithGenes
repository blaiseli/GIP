#!/bin/bash
IN=$1
DF=$2
FBC=$DF/coverages/${IN}.fbc
OUT=$DF/coverages/${IN}.ov
echo "#cmd: ovWithGenes IN is $IN" 
tail -n +2 $FBC  | perl -ne 'if($_=~/^([^:]+):([^-]+)-(\S+).*(\S+)\s+\S+$/){$chr=$1; $start=$2; $end=$3; $sample=$4; $locus="${chr}:${start}-${end}"; print "$chr\t$start\t$end\t$locus\n"; }' > ${DF}_tmp.bed
cat $GENES | perl -ne 'if($_=~/gene_id \"([^\"]+)\"/){$ge=$1;} if($_=~/(\S+)\s+\S+\s+\S+\s+(\S+)\s+(\S+)/){print "$1\t$2\t$3\t$ge\n";}' > ${DF}_genes.bed
bedtools intersect -loj -a ${DF}_tmp.bed -b ${DF}_genes.bed > ${DF}_tmp.ov
echo -e "locus\tnormCov\tpercReadsSupportingSV\tMAPQ\tSV\tsampleId\tSVid\tgenes" > $OUT
perl -e '
my %h;
open(F,"<'$DF'_tmp.ov");
while(<F>){
    if($_=~/^\S+\s+\S+\s+\S+\s+(\S+)\s+\S+\s+\S+\s+\S+\s+(\S+)/){
        my $locus = $1;
        my $ge    = $2;
        push(@{$h{$locus}{'genes'}} , $ge);
    }
}
close F;
open(F,"<'$FBC'");
$_=<F>;
while(<F>){
    if($_=~/(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)/){
        $locus="$1";
        $h{$locus}{'normCov'}=$2;
        $h{$locus}{'percReadsSupportingSV'}=$3;
        $h{$locus}{'MAPQ'}=$4;
        $h{$locus}{'SV'}=$5;
        $h{$locus}{'sampleId'}=$6;
        $h{$locus}{'SVid'}=$7;
    }
}
close F;
foreach $locus (keys %h){
    my $normCov               = $h{$locus}{'normCov'};
    my $percReadsSupportingSV = $h{$locus}{'percReadsSupportingSV'};
    my $MAPQ                  = $h{$locus}{'MAPQ'};
    my $SV                    = $h{$locus}{'SV'};
    my $sampleId           = $h{$locus}{'sampleId'};
    my $SVid                  = $h{$locus}{'SVid'};
    my $svGenes               = join("," , @{$h{$locus}{'genes'}} );
    $locus=~s/_.*//;
    print "$locus\t$normCov\t$percReadsSupportingSV\t$MAPQ\t$SV\t$sampleId\t$SVid\t$svGenes\n";
}
close F;
' | sort -k1,1n -k2,2n >> $OUT
rm  ${DF}_tmp.ov ${DF}_tmp.bed ${DF}_genes.bed
