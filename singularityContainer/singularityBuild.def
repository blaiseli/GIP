Bootstrap: docker
From: ubuntu:xenial

%labels
  maintainer Giovanni Bussotti <gbussott@pasteur.fr>
  package.name  L-GERT
  package.version 1.0.0
  package.homepage  https://github.com/giovannibussotti/L-GERT
  package.license  GPLv3

%files
  files/packages.tar.gz /opt

%environment
  export LC_ALL=C
  export R_LIBS=/usr/local/lib/R/library/
  export R_LIBS_USER=/usr/local/lib/R/library/

%post
  ln -nsf /bin/bash /bin/sh

  #unpaking
  cd /opt
  tar -xzf packages.tar.gz
  cd packages
  mv bedtools2/ bwa/ htslib/ L-GERT/ samtools/ freebayes/ Python3/ R vcftools/ rmblast/ RepeatMasker snpEff circos/ MUMmer/ leishmaniaAndAncestralSharedRepeats.fa cdhit/ /opt/
  mv /opt/L-GERT/snpEff.configTemplate /opt/L-GERT/rpkginstall /opt/
  mv picard.jar GenomeAnalysisTK.jar delly bedGraphToBigWig genePredToBed gtfToGenePred trf409.linux64 /bin/
  cd ..
  rm -rf packages

  # To work on tars use singularity run -B /pasteur 
  # it mounts all /pasteur so your home is in /pasteur in /pasteur of the image
  mkdir -p /pasteur
  mkdir -p /mnt/fq
  mkdir -p /mnt/data
  
  #apt-get
  export DEBIAN_FRONTEND=noninteractive
  apt-get -y update
  apt-get install -y build-essential openssh-client wget zlib1g-dev bzip2 zlib1g libncurses5-dev libbz2-dev liblzma-dev unzip openjdk-8-jdk checkinstall libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev python-dev python-setuptools python-pip python-smbus openssl libffi-dev python2.7 fort77 xorg-dev libblas-dev gfortran gcc-multilib gobjc++ aptitude libpcre3-dev libcurl4-openssl-dev texlive texlive-fonts-extra texinfo libnlopt-dev libxml2-dev git autoconf autogen vim csh libcairo2-dev libgd2-xpm-dev pandoc cmake bc parallel
  aptitude install -y libreadline-dev

  #samtools
  cd /opt/samtools
  ./configure && make && make install
  
  #freebayes
  cd /opt/freebayes
  make 
  make install

  #bwa
  cd /opt/bwa
  make
  mv bwa /bin/
  
  #htslib (tabix)
  cd /opt/htslib
  ./configure && make && make install
 
  #bedtools
  cd /opt/bedtools2
  make install

  #L-GERT
  mv /opt/L-GERT/* /bin/
  # put the containt of your script in a file /.singularity.d/env/91-environment.sh
  # which is automatically source by singularity befor run/shell/exec command
  cat /bin/bashFunctions.sh >> $SINGULARITY_ENVIRONMENT
  
  #give permissions
  chmod a+x /bin/*
  chmod a+r /bin/*
  chmod a+x /opt/rpkginstall
  chmod a+r /opt/leishmaniaAndAncestralSharedRepeats.fa

  #Python3
  cd /opt/Python3
  ./configure && make && make install

  #vcftools
  cd /opt/vcftools
  ./autogen.sh
  ./configure && make && make install

  #deeptools
  pip3 install cython
  pip3 install deeptools==2.4.2

  #RepeatMasker
  cd /opt/RepeatMasker
  export PERL_MM_USE_DEFAULT=1
  cpan Text::Soundex
  perl ./configure --trf_prgm /bin/ --rmblast_dir /opt/rmblast/bin/

  #other cpan modules needed for perl scripts
  cpan Pod::Usage
  cpan Getopt::Long
  cpan List::Util
  cpan Clone
  cpan Config::General
  cpan Font::TTF::Font
  cpan GD
  cpan Math::Bezier
  cpan Math::Round
  cpan Math::VecStat
  cpan Params::Validate
  cpan Readonly
  cpan Regexp::Common
  cpan SVG
  cpan Set::IntSpan
  cpan Statistics::Basic
  cpan Text::Format  

  #MUMmer
  cd /opt/MUMmer
  make check
  make install

  #snpEff does not need installation, just do: java -jar snpEff.jar

  #cdhit
  cd /opt/cdhit
  make

  #R
  cd /opt/R 
  ./configure --enable-memory-profiling --with-cairo 
  make
  make install
  /opt/rpkginstall ape cran
  /opt/rpkginstall argparse cran
  /opt/rpkginstall Biostrings bioconductor
  /opt/rpkginstall data.table cran
  /opt/rpkginstall FactoMineR cran
  /opt/rpkginstall fastcluster cran
  /opt/rpkginstall GenomicRanges bioconductor
  /opt/rpkginstall ggExtra cran
  /opt/rpkginstall ggplot2 cran
  /opt/rpkginstall gplots bioconductor
  /opt/rpkginstall heatmap3 cran
  /opt/rpkginstall IRanges bioconductor
  /opt/rpkginstall RColorBrewer cran
  /opt/rpkginstall reshape2 cran
  /opt/rpkginstall scales cran
  /opt/rpkginstall seqLogo bioconductor
  /opt/rpkginstall VariantAnnotation bioconductor
  /opt/rpkginstall entropy cran
  /opt/rpkginstall fitdistrplus cran
  /opt/rpkginstall gtools cran
  /opt/rpkginstall igraph cran
  /opt/rpkginstall MCL cran
  /opt/rpkginstall mclust cran
  /opt/rpkginstall mixtools cran
  /opt/rpkginstall networkD3 cran
  /opt/rpkginstall psych cran
  /opt/rpkginstall session cran
  /opt/rpkginstall ggridges cran
  /opt/rpkginstall Cairo cran
  /opt/rpkginstall fields cran
  /opt/rpkginstall karyoploteR bioconductor
  /opt/rpkginstall knitr cran
  /opt/rpkginstall rmarkdown cran
  #/opt/rpkginstall bisoreg cran #may need manual install since it was recently removed from CRAN

  #bisoreg
  /opt/rpkginstall bootstrap cran
  /opt/rpkginstall monreg cran
  /opt/rpkginstall R2WinBUGS cran
  /opt/rpkginstall coda cran
  cd /opt
  wget https://cran.r-project.org/src/contrib/Archive/bisoreg/bisoreg_1.5.tar.gz
  R -e 'install.packages("bisoreg_1.5.tar.gz", repos = NULL, type="source")'
  R CMD INSTALL --build bisoreg_1.5.tar.gz  

%runscript
 INPUT=$1
 echo $INPUT > result0
 ls /mnt/fq > result1
 ls /mnt/data > result2
 samtools view $INPUT | head > result3
 type bwaMapSample > result4
 

#bash mapSample.sh  $SAMPLE_ID $SLURM_CPUS_PER_TASK $fqDir $ASSEMBLY $INDEX $R1_FQID $R2_FQID $MULTIRUN_R1_FQIDS $MULTIRUN_R2_FQIDS $bamDir
#bash mapSample.sh test 3 /mnt/fq/ /mnt/data/Linf_test.fa /mnt/data/db/bwa/Linf_test test.R1.fastq.gz test.R2.fastq.gz NA NA .
